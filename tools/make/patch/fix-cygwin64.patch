+++ config/config.guess
@@ -759,7 +759,7 @@
 	rm -f $dummy.c && rmdir $tmpdir
 	echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`${LIBC:+-$LIBC}
 	exit 0 ;;
-    i*:CYGWIN*:*)
+    *:CYGWIN*:*)
 	echo ${UNAME_MACHINE}-pc-cygwin
 	exit 0 ;;
     i*:MINGW*:*)
+++ read.c
@@ -33,6 +33,9 @@
 #include "debug.h"
 #include "hash.h"
 
+#ifdef __CYGWIN__
+#include <sys/cygwin.h>
+#endif
 
 #ifndef WINDOWS32
 #ifndef _AMIGA
@@ -788,8 +791,9 @@
     if (p && !unixy_shell && !cygwin_posix_path_list_p (p))
       {
         register char *p1;
-	p1 = (char *) alloca (cygwin_win32_to_posix_path_list_buf_size (p));
-        cygwin_win32_to_posix_path_list (p, p1);
+        size_t size = cygwin_conv_path_list (CCP_WIN_A_TO_POSIX, p, NULL, 0);
+	p1 = (char *) alloca (size);
+        cygwin_conv_path_list (CCP_WIN_A_TO_POSIX, p, p1, 0);
         p = p1;
       }
 #endif /* __CYGWIN__ */
+++ vpath.c
@@ -23,6 +23,9 @@
 #ifdef WINDOWS32
 #include "pathstuff.h"
 #endif
+#ifdef __CYGWIN__
+#include <sys/cygwin.h>
+#endif
 
 /* Structure used to represent a selective VPATH searchpath.  */
 
@@ -104,9 +107,9 @@
       /* if a win32 VPATH path list, convert to posix path list */
       if (!unixy_shell && !cygwin_posix_path_list_p (p))
         {
-          posixp = (char *)
-                   alloca (cygwin_win32_to_posix_path_list_buf_size (p));
-          cygwin_win32_to_posix_path_list (p, posixp);
+          size_t size = cygwin_conv_path_list(CCP_WIN_A_TO_POSIX, p, NULL, 0);
+          posixp = (char *) alloca (size);
+          cygwin_conv_path_list (CCP_WIN_A_TO_POSIX, p, posixp, size);
           p = posixp;
         }
 #endif /* __CYGWIN__ */
@@ -149,9 +152,9 @@
       /* if a win32 VPATH path list, convert to posix path list */
       if (!unixy_shell && !cygwin_posix_path_list_p (p))
         {
-          posixp = (char *)
-                   alloca (cygwin_win32_to_posix_path_list_buf_size (p));
-          cygwin_win32_to_posix_path_list (p, posixp);
+          size_t size = cygwin_conv_path_list(CCP_WIN_A_TO_POSIX, p, NULL, 0);
+          posixp = (char *) alloca (size);
+          cygwin_conv_path_list (CCP_WIN_A_TO_POSIX, p, posixp, size);
           p = posixp;
         }
 #endif /* __CYGWIN__ */
